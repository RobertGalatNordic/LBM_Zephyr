/*
 * Copyright (c) 2024 Nordic Semiconductor
 * SPDX-License-Identifier: Apache-2.0
 */

/*
 * Arduino header adapter shield for nrf54l15dk
 * This shield maps nrf54l15dk pins to Arduino header format
 * allowing standard Arduino shields to work on nrf54l15dk
 */

/ {
    /* Arduino header connector definition for nrf54l15dk */
    arduino_header: connector {
        compatible = "arduino-header-r3";
        #gpio-cells = <2>;
        gpio-map-mask = <0xffffffff 0xffffffc0>;
        gpio-map-pass-thru = <0 0x3f>;
        gpio-map = <0 0 &gpio2 8 0>,   /* A0 - Reset pin */
                   <1 0 &gpio2 6 0>,   /* A1 - Busy pin */
                   <2 0 &gpio1 11 0>,  /* A2 - Event pin */
                   <3 0 &gpio0 0 0>,   /* A3 - CS pin */
                   <4 0 &gpio0 4 0>,   /* A4 - Extra GPIO */
                   <5 0 &gpio0 5 0>,   /* A5 - Extra GPIO */
                   <6 0 &gpio0 1 0>,   /* D6 - MOSI */
                   <7 0 &gpio0 2 0>,   /* D7 - MISO */
                   <8 0 &gpio0 3 0>,   /* D8 - SCK */
                   <9 0 &gpio2 6 0>,   /* D9 - Busy pin */
                   <10 0 &gpio0 0 0>,  /* D10 - CS pin */
                   <11 0 &gpio1 11 0>, /* D11 - Event pin */
                   <12 0 &gpio0 2 0>,  /* D12 - MISO */
                   <13 0 &gpio0 0 0>,  /* D13 - CS pin */
                   <14 0 &gpio0 6 0>,  /* D14 - Extra GPIO */
                   <15 0 &gpio0 7 0>;  /* D15 - Extra GPIO */
    };
};

/* Arduino SPI mapping to nrf54l15dk SPI30 */
arduino_spi: &spi30 {
    status = "okay";
    pinctrl-0 = <&spi30_default_alt>;
    pinctrl-1 = <&spi30_sleep_alt>;
    pinctrl-names = "default", "sleep";
};

/* Arduino I2C mapping to nrf54l15dk I2C20 */
arduino_i2c: &i2c20 {
    status = "okay";
    pinctrl-0 = <&i2c20_default_alt>;
    pinctrl-1 = <&i2c20_sleep_alt>;
    pinctrl-names = "default", "sleep";
};

/* Arduino UART mapping to nrf54l15dk UART21 */
// arduino_serial: &uart21 {
//     status = "okay";
//     current-speed = <115200>;
//     pinctrl-0 = <&uart21_default_alt>;
//     pinctrl-1 = <&uart21_sleep_alt>;
//     pinctrl-names = "default", "sleep";
// };

/* Pin control configurations */
&pinctrl {
    /* SPI pin configuration */
    spi30_default_alt: spi30_default_alt {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 3)>,    /* D8 - SCK */
                <NRF_PSEL(SPIM_MISO, 0, 2)>,       /* D7 - MISO */
                <NRF_PSEL(SPIM_MOSI, 0, 1)>;       /* D6 - MOSI */
        };
    };

    spi30_sleep_alt: spi30_sleep_alt {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 3)>,
                <NRF_PSEL(SPIM_MISO, 0, 2)>,
                <NRF_PSEL(SPIM_MOSI, 0, 1)>;
            low-power-enable;
        };
    };

    /* I2C pin configuration */
    i2c20_default_alt: i2c20_default_alt {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 4)>,   /* A4 - SDA */
                <NRF_PSEL(TWIM_SCL, 0, 5)>;       /* A5 - SCL */
        };
    };

    i2c20_sleep_alt: i2c20_sleep_alt {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 4)>,
                <NRF_PSEL(TWIM_SCL, 0, 5)>;
            low-power-enable;
        };
    };

    /* UART pin configuration */
    // uart21_default_alt: uart21_default_alt {
    //     group1 {
    //         psels = <NRF_PSEL(UART_TX, 0, 6)>,    /* D14 - TX */
    //             <NRF_PSEL(UART_RX, 0, 7)>;        /* D15 - RX */
    //     };
    // };

    // uart21_sleep_alt: uart21_sleep_alt {
    //     group1 {
    //         psels = <NRF_PSEL(UART_TX, 0, 6)>,
    //             <NRF_PSEL(UART_RX, 0, 7)>;
    //         low-power-enable;
    //     };
    // };
}; 

/ {
    aliases {
        /* Specify which UART is used for communication (as input for the hw modem tester) */
        smtc-hal-uart = &uart20;
        smtc-watchdog = &wdt31;
    };

    zephyr,user {
        /* PINS used for the HW modem sample. */
        hw-modem-command-gpios = <&gpio1 8  (GPIO_ACTIVE_HIGH|GPIO_PULL_UP)>;
        hw-modem-busy-gpios =  <&gpio1 9 GPIO_ACTIVE_HIGH>;
        hw-modem-event-gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
        hw-modem-led-scan-gpios =<&gpio1 12 GPIO_ACTIVE_HIGH>;
    };
};

&uart20 {
	/delete-property/ hw-flow-control;
};

/* Configuration needed for LR1110 module on nrf54 boards */


/* Enable watchdog for sample */
&wdt31 {
    status = "okay";
};

/* Memory configuration optimized for LBM */
&cpuapp_rram {
    reg = <0x0 DT_SIZE_K(1524)>;
};

&cpuapp_sram {
    reg = <0x20000000 DT_SIZE_K(256)>;
    ranges = <0x0 0x20000000  0x40000>;
};